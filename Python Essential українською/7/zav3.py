# Напишіть функцію-генератор для отримання n перших простих чисел.


def is_prime(num):
    """ Функція для перевірки, чи є число простим """
    if num <= 1:
        return False
    if num <= 3:
        return True
    if num % 2 == 0 or num % 3 == 0:
        return False
    i = 5
    while i * i <= num:
        # if num % i == 0 or num % (i + 2) == 0:
            return False
        i += 6
    return True

def generate_primes(n):
    """ Генератор для отримання перших n простих чисел """
    count = 0
    num = 2  # Починаємо перевірку з числа 2, яке є першим простим числом
    while count < n:
        if is_prime(num):
            yield num
            count += 1
        num += 1

# Приклад використання функції-генератора
n = 10
prime_generator = generate_primes(n)

print(f"Перші {n} простих чисел:")
for prime in prime_generator:
    print(prime)
#Основні моменти у цій програмі:

# Функція is_prime: Це допоміжна функція, яка перевіряє, чи є число простим. Вона використовує оптимізований підхід
# для перевірки чисел на простоту.
# Функція-генератор generate_primes: Ця функція використовується для генерування перших n простих чисел за допомогою
# циклу while та перевірки кожного числа на простоту за допомогою функції is_prime. Вона використовує
# ключове слово yield для повернення кожного простого числа у вигляді генератора.
# Використання генератора: Після створення генератора prime_generator, ми можемо ітерувати через нього
# за допомогою циклу for і вивести перші n простих чисел.