# Створіть сокет, який приймає повідомлення з двома числами, що розділені комою. Сервер має конвертувати рядкове
# повідомлення у два числа й обчислювати його суму. Після успішного обчислення повертати відповідь клієнту.


# UPD - сервер

import socket

# Створення UDP-сокету
server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# Прив'язка сокету до адреси і порту
server_socket.bind(('localhost', 12345))
print("UDP сервер запущено і прослуховується на порту 12345...")

while True:
    # Отримання даних від клієнта
    data, client_address = server_socket.recvfrom(1024)
    message = data.decode()

    try:
        # Розділення повідомлення на два числа
        num1, num2 = map(float, message.split(','))
        # Обчислення суми
        result = num1 + num2
        # Формування відповіді
        response = f"Сума: {result}"
    except ValueError:
        response = "Помилка: Невірний формат вхідних даних. Очікується два числа, розділені комою."

    # Відправка відповіді клієнту
    server_socket.sendto(response.encode(), client_address)

# ----------------------------------------

# UPD - клієнт

import socket

# Створення UDP-сокету
client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# Введення двох чисел користувачем
num1 = input("Введіть перше число: ")
num2 = input("Введіть друге число: ")

# Формування повідомлення
message = f"{num1},{num2}"

# Відправка повідомлення на сервер
client_socket.sendto(message.encode(), ('localhost', 12345))

# Отримання відповіді від сервера
data, server_address = client_socket.recvfrom(1024)
print(f"Відповідь від сервера: {data.decode()}")

# Закриття сокету (опціонально)
client_socket.close()

# Пояснення коду
#
# UDP-сервер:
#
# Створює UDP-сокет і прив'язує його до адреси localhost та порту 12345.
# Безперервно прослуховує вхідні повідомлення від клієнтів.
# Отримує повідомлення, конвертує його в два числа, обчислює їх суму.
# Відправляє результат назад клієнту.
# Якщо повідомлення має неправильний формат, відправляє відповідне повідомлення про помилку.
#
# UDP-клієнт:
#
# Створює UDP-сокет.
# Приймає два числа від користувача і формує повідомлення у форматі число1,число2.
# Відправляє повідомлення на сервер.
# Отримує відповідь від сервера і друкує її.
# Закриває сокет.
# Цей приклад демонструє, як можна використовувати модуль socket для створення простого UDP-сервера та клієнта для обробки
# та обчислення числових даних.