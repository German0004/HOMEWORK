# Створіть три функції, одна з яких читає файл на диску із заданим ім'ям та перевіряє наявність рядка
# «Wow!». Якщо файлу немає, то засипає на 5 секунд, а потім знову продовжує пошук по файлу. Якщо файл є,
# то відкриває його і шукає рядок «Wow!». За наявності цього рядка закриває файл і генерує подію, а інша
# функція чекає на цю подію і у разі її виникнення виконує видалення цього файлу. Якщо рядки «Wow!» не було
# знайдено у файлі, то засипати на 5 секунд. Створіть файл руками та перевірте виконання програми.

import os
import time
import threading
import queue


def read_file(filename, event):
    """Читає файл і генерує подію при знаходженні рядка "Wow!".

    Args:
        filename (str): Ім'я файлу.
        event (threading.Event): Об'єкт для синхронізації потоків.
    """
    while True:
        try:
            with open(filename, "r") as f:
                for line in f:
                    if "Wow!" in line:
                        event.set()  # Генеруємо подію
                        return
        except FileNotFoundError:
            print(f"Файл {filename} не знайдено. Чекаємо 5 секунд...")
            time.sleep(5)


def wait_for_event_and_delete_file(filename, event):
    """Чекає на подію і видаляє файл.

    Args:
        filename (str): Ім'я файлу.
        event (threading.Event): Об'єкт для синхронізації потоків.
    """
    event.wait()
    os.remove(filename)
    print(f"Файл {filename} видалено.")


if __name__ == "__main__":
    filename = "my_file.txt"
    event = threading.Event()

    # Створюємо файл вручну (якщо його немає)
    if not os.path.exists(filename):
        with open(filename, "w") as f:
            f.write("Hello, world!\n")
            f.write("Wow!\n")

    # Запускаємо потоки
    thread1 = threading.Thread(target=read_file, args=(filename, event))
    thread2 = threading.Thread(
        target=wait_for_event_and_delete_file, args=(filename, event)
    )
    thread1.start()
    thread2.start()

    # Чекаємо завершення потоків (можна додати механізм примусового завершення)
    thread1.join()
    thread2.join()

# Пояснення коду:

# threading.Event: Використовується для синхронізації потоків. Коли рядок "Wow!" знайдено, викликається event.set(),
# що сигнализує іншому потоку про продовження виконання.
# while True: Цикл забезпечує постійний моніторинг файлу, навіть якщо він спочатку не існує.
# try-except: Обробляємо виключення FileNotFoundError для випадку, коли файл ще не створений.
# os.remove: Видаляє файл після отримання сигналу про знаходження рядка "Wow!".

# Перевірка роботи:

# Створіть файл my_file.txt з вмістом, описаним у коді.
# Запустіть скрипт.
# Програма повинна знайти рядок "Wow!", видалити файл і завершити роботу.
# Для додаткової перевірки спробуйте видалити рядок "Wow!" з файлу і запустити скрипт знову. Програма повинна
# продовжувати перевіряти файл, доки не буде знайдено рядок "Wow!".

# Додаткові можливості:
#
# Логування: Додати логування для відстеження виконання програми.
# Таймаути: Встановити таймаут для очікування події, щоб уникнути зависання програми.
# Більш складні умови пошуку: Розширити функціональність для пошуку більш складних патернів.
# Повідомлення користувача: Виводити повідомлення користувачу про результати пошуку та видалення файлу.
